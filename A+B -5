import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;
/*방법1.*/

public class Main {
	public static void main(String[] args) throws IOException {
		//값 입력 (사용자가 입력할)
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		//값 출력 (입력한 결과 버퍼에서 나와)
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st;
		
		//0 0이 입력될때 종료시키려면 while문을 돌리는게 ...
		while(true) {
			//밖에 작성 하면 값들을 연속해서 받을 수 없음
			st = new StringTokenizer(br.readLine(), " ");
			//a + b를 계속 받을 예정
			int A = Integer.parseInt(st.nextToken());
			int B = Integer.parseInt(st.nextToken());
			
			//둘다 0이면 while문 빠져나오기
			if(A == 0 && B == 0) {
				break;
			}
			//고 상태에서 bw에 a+b한 값을 담기
			bw.write(A+B+"\n");
			
		}
		//담은 것 한번에 모두 출력하기
		bw.flush();
		
	}
}
/*방법2.*/
public class Main {
	public static void main(String[] args) throws IOException {
		//값 입력 (사용자가 입력할)
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

//		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringBuilder sb = new StringBuilder();
		StringTokenizer st;
		
		//0 0이 입력될때 종료시키려면 while문을 돌리는게 ...
		while(true) {
			//밖에 작성 하면 값들을 연속해서 받을 수 없음
			st = new StringTokenizer(br.readLine(), " ");
			//a + b를 계속 받을 예정
			int A = Integer.parseInt(st.nextToken());
			int B = Integer.parseInt(st.nextToken());
			
			//둘다 0이면 while문 빠져나오기
			if(A == 0 && B == 0) {
				break;
			}
			//더한 값을 sb에 붙이기
			sb.append(A+B);
			sb.append("\n");
			
		}
		//담긴 sb들 출력!
		System.out.println(sb);
		
	}
}
